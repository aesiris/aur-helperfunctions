#!/bin/bash
#
# sobump - find broken library links in manually installed packages
#

# Avoid any encoding problems
export LANG=C

local-packages() {
        pacman -Sl local | grep installed | cut -f 2 -d " "
}

# check if messages are to be printed using color
unset ALL_OFF BOLD BLUE GREEN RED YELLOW
if [[ -t 2 ]]; then
	# prefer terminal safe colored and bold text when tput is supported
	if tput setaf 0 &>/dev/null; then
		ALL_OFF="$(tput sgr0)"
		BOLD="$(tput bold)"
		BLUE="${BOLD}$(tput setaf 4)"
		GREEN="${BOLD}$(tput setaf 2)"
		RED="${BOLD}$(tput setaf 1)"
		YELLOW="${BOLD}$(tput setaf 3)"
	else
		ALL_OFF="\e[1;0m"
		BOLD="\e[1;1m"
		BLUE="${BOLD}\e[1;34m"
		GREEN="${BOLD}\e[1;32m"
		RED="${BOLD}\e[1;31m"
		YELLOW="${BOLD}\e[1;33m"
	fi
fi
readonly ALL_OFF BOLD BLUE GREEN RED YELLOW

plain() {
	local mesg=$1; shift
	printf "${BOLD}    ${mesg}${ALL_OFF}\n" "$@" >&2
}

msg() {
	local mesg=$1; shift
	printf "${GREEN}==>${ALL_OFF}${BOLD} ${mesg}${ALL_OFF}\n" "$@" >&2
}

setup_workdir() {
	[[ -z $WORKDIR ]] && WORKDIR=$(mktemp -d --tmpdir "${0##*/}.XXXXXXXXXX")
}

cleanup() {
	trap - EXIT INT QUIT TERM HUP

	[[ -n $WORKDIR ]] && rm -rf "$WORKDIR"
	[[ $1 ]] && exit $1
}

abort() {
	msg 'Aborting...'
	cleanup 0
}

die() {
	error "$*"
	cleanup 1
}

trap abort INT QUIT TERM HUP
trap 'cleanup 0' EXIT

TEMPDIR=$(mktemp -d --tmpdir sobump-script.XXXX)

msg 'Go out and drink some tea, this will take a while :) ...'
#  Check ELF binaries in the PATH and specified dir trees.
	#  Get list of files in tree.
	#files=$( pacman -Qql $( local-packages ) )
	for pkg in $( local-packages ); do
		#for i in $files; do
		for i in $( pacman -Qql $pkg ); do
			if /lib/ld-2.16.so --verify "$i"; then	
				#  Is an ELF binary.
				missing=$( /lib/ld-2.16.so --list "$i" 2>&1 | grep "error while loading shared libraries" | cut -f 1,3 -d ':')
				if (( ${#missing} != 0 )); then
					echo "$missing" >> $TEMPDIR/raw.txt
					echo "$pkg" >> $TEMPDIR/pacman.txt
				fi
			fi
		done
	done

if [[ -e $TEMPDIR/raw.txt ]]; then

	cut -f 1 -d ':' $TEMPDIR/raw.txt > $TEMPDIR/affected-files.txt

	# invoke pacman
	#for i in $(cat $TEMPDIR/affected-files.txt); do
	#	pacman -Qqo $i >> $TEMPDIR/pacman.txt 
	#done 
	sort -u $TEMPDIR/pacman.txt > $TEMPDIR/possible-rebuilds.txt

	msg "Possible Rebuild:"
	cat $TEMPDIR/possible-rebuilds.txt

	msg "Files saved to $TEMPDIR"
else
	msg "No missing libraries"
fi
